name: Build firmware

on:
  push:
    branches: [main]
    tags: ['v*']

permissions:
  contents: write 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Arduino CLI
        uses: arduino/setup-arduino-cli@v2
        with:
          version: "1.1.0"
      
      - name: Configure Arduino CLI
        run: |
          arduino-cli config set library.enable_unsafe_install true
          arduino-cli config add board_manager.additional_urls https://static-cdn.m5stack.com/resource/arduino/package_m5stack_index.json

      - name: Install M5Stack platform
        run: |
          arduino-cli core update-index
          arduino-cli core install m5stack:esp32@2.1.2
          arduino-cli lib install "M5StickCPlus2"

      - name: Install required library
        run: arduino-cli lib install --git-url https://github.com/T-vK/ESP32-BLE-Keyboard

      - name: Install esptool
        run: pip install esptool

      - name: debug
        run: |
          arduino-cli lib list
          arduino-cli core list


      - name: Setup platform.txt
        run: |
          baseFolder="$HOME/.arduino15/packages/m5stack/hardware/esp32"
          
          # Find the latest version of the folder
          latestVersion=$(find "$baseFolder" -maxdepth 1 -type d -exec basename {} \; | sort -V | head -n 1)
          
          if [ -z "$latestVersion" ]; then
              echo "No version found."
              read -p "Press Enter to exit."
              exit 1
          fi
          
          # Full path to the file to be edited
          file="$baseFolder/$latestVersion/platform.txt"
          backupFile="$baseFolder/$latestVersion/platform.txt.bkp"
          prefix="build.extra_flags.esp32"
          option=" -w "
          
          prefix2="compiler.c.elf.libs.esp32"
          option2=" -zmuldefs "
  
          # Use awk to insert options after the first equals sign on lines with specified prefixes
          awk -v prefix="$prefix" -v option="$option" -v prefix2="$prefix2" -v option2="$option2" '{
              if ($0 ~ "^" prefix) {
                  sub(/=/, "=" option);
                  print;
              } else if ($0 ~ "^" prefix2) {
                  sub(/=/, "=" option2);
                  print;
              } else {
                  print;
              }
          }' "$file" > "$file.tmp" && mv "$file.tmp" "$file"

          echo "Done."

      - name: Compile firmware
        run: |
          arduino-cli compile --fqbn m5stack:esp32:m5stack_stickc_plus2 \
            --build-path ./build -e \
            --build-property build.partitions=huge_app \
            --build-property upload.maximum_size=3145728 \
            ./m5stick_crystal_firmware.ino

      - name: Merge binaries
        run: |
          esptool --chip esp32s3 merge_bin --output build/firmware.bin \
            0x1000 build/m5stick_crystal_firmware.ino.bootloader.bin \
            0x8000 build/m5stick_crystal_firmware.ino.partitions.bin \
            0x10000 build/m5stick_crystal_firmware.ino.bin
          ls build

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: build/firmware.bin
          retention-days: 90
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') && needs.build.result == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: firmware

      - name: List files
        run: ls -la

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
            
            Build from commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          files: ./firmware.bin
          generate_release_notes: true